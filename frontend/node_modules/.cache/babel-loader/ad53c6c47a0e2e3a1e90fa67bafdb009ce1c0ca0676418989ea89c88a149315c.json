{"ast":null,"code":"var _jsxFileName = \"/home/ichigomazone/Vscode/ReactJs/new-ui./frontend/src/components/List/chatList/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from \"./chatList.module.scss\";\nimport { Pin, Users, File, Image, Video } from 'lucide-react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction ChatList({\n  onSelectFriend,\n  chatData1,\n  setUpdateChatList\n}) {\n  _s();\n  const [userChats, setUserChats] = useState([]);\n  const [leakInfoMap, setLeakInfoMap] = useState({});\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const socketRef = useRef(null);\n\n  // L·∫•y danh s√°ch chat\n  useEffect(() => {\n    if (!chatData1) return;\n    const fetchChats = async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/chat/chat-list', {\n          userId: chatData1\n        });\n        if (res.status === 200) {\n          setUserChats(res.data.chats);\n          console.log('[ChatList] Danh s√°ch chat:', res.data);\n        }\n      } catch (err) {\n        console.error('[ChatList] L·ªói khi l·∫•y danh s√°ch chat:', err);\n      }\n    };\n    fetchChats();\n  }, [chatData1]);\n\n  // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const userIdsToFetch = userChats.map(chat => chat.members.find(member => member !== chatData1));\n        const uniqueUserIds = [...new Set(userIdsToFetch)].filter(userId => !(userId in leakInfoMap));\n        if (uniqueUserIds.length === 0) return;\n        const promises = uniqueUserIds.map(userId => axios.post('http://localhost:5000/api/auth/leak-info1', {\n          data: userId\n        }));\n        const results = await Promise.all(promises);\n        const newLeakInfoMap = {\n          ...leakInfoMap\n        };\n        results.forEach((res, index) => {\n          const userId = uniqueUserIds[index];\n          newLeakInfoMap[userId] = res.data;\n        });\n        setLeakInfoMap(newLeakInfoMap);\n        console.log('[ChatList] Th√¥ng tin ng∆∞·ªùi d√πng (map):', newLeakInfoMap);\n      } catch (err) {\n        console.log('[ChatList] L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:', err);\n      }\n    };\n    if (userChats.length > 0 && Object.keys(leakInfoMap).length < userChats.length) {\n      fetchAll();\n    }\n  }, [userChats, chatData1, leakInfoMap]);\n\n  // X·ª≠ l√Ω WebSocket ƒë·ªÉ l·∫Øng nghe tin nh·∫Øn\n  useEffect(() => {\n    if (!chatData1) return;\n    socketRef.current = io(\"http://localhost:5000\", {\n      query: {\n        userId: chatData1\n      }\n    });\n\n    // L·∫Øng nghe tin nh·∫Øn t·ª´ ng∆∞·ªùi kh√°c (receiveMessage ho·∫∑c privateMessage)\n    socketRef.current.on(\"receiveMessage\", data => {\n      console.log(\"üì© Nh·∫≠n receiveMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu receiveMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n    socketRef.current.on(\"privateMessage\", data => {\n      console.log(\"üì© Nh·∫≠n privateMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu privateMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    // L·∫Øng nghe tin nh·∫Øn do ch√≠nh m√¨nh g·ª≠i (selfMessage)\n    socketRef.current.on(\"selfMessage\", data => {\n      console.log(\"üì© Tin nh·∫Øn do t√¥i g·ª≠i trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu selfMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    // L·∫Øng nghe c·∫≠p nh·∫≠t tin nh·∫Øn media (updateMessage)\n    socketRef.current.on(\"updateMessage\", data => {\n      console.log(\"üì© Nh·∫≠n updateMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content || data.message.message_type,\n          sender: data.message.sender || chatData1,\n          timestamp: data.message.timestamp || new Date().toISOString(),\n          message_type: data.message.message_type,\n          url: data.message.url || null\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu updateMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [chatData1]);\n\n  // H√†m c·∫≠p nh·∫≠t chat khi c√≥ tin nh·∫Øn m·ªõi\n  const updateChatInList = (chatId, messageData) => {\n    console.log('[ChatList] updateChatInList ƒë∆∞·ª£c g·ªçi v·ªõi:', {\n      chatId,\n      messageData\n    });\n    setUserChats(prevChats => {\n      const chatExists = prevChats.find(chat => chat.id === chatId || chat._id === chatId);\n      if (!chatExists) {\n        console.warn('[ChatList] ChatId kh√¥ng t·ªìn t·∫°i:', chatId);\n        return prevChats;\n      }\n      const updatedChats = prevChats.map(chat => chat.id === chatId || chat._id === chatId ? {\n        ...chat,\n        last_message: {\n          content: messageData.message_type === 'text' ? messageData.content : messageData.url ? decodeURIComponent(messageData.content) : messageData.message_type,\n          sender: messageData.sender,\n          timestamp: messageData.timestamp,\n          message_type: messageData.message_type,\n          url: messageData.url\n        }\n      } : chat);\n\n      // S·∫Øp x·∫øp theo timestamp c·ªßa last_message\n      const sortedChats = [...updatedChats].sort((a, b) => {\n        var _a$last_message, _b$last_message;\n        const timeA = new Date(((_a$last_message = a.last_message) === null || _a$last_message === void 0 ? void 0 : _a$last_message.timestamp) || 0).getTime();\n        const timeB = new Date(((_b$last_message = b.last_message) === null || _b$last_message === void 0 ? void 0 : _b$last_message.timestamp) || 0).getTime();\n        return timeB - timeA;\n      });\n      console.log('[ChatList] C·∫≠p nh·∫≠t userChats (sorted):', sortedChats);\n      return sortedChats;\n    });\n  };\n\n  // ƒêƒÉng k√Ω h√†m updateChatInList v·ªõi Dashboard\n  useEffect(() => {\n    if (setUpdateChatList && typeof setUpdateChatList === 'function') {\n      console.log('[ChatList] ƒêƒÉng k√Ω updateChatInList v·ªõi Dashboard');\n      setUpdateChatList(updateChatInList);\n    } else {\n      console.warn('[ChatList] setUpdateChatList kh√¥ng ph·∫£i l√† h√†m ho·∫∑c kh√¥ng ƒë∆∞·ª£c truy·ªÅn:', setUpdateChatList);\n    }\n  }, [setUpdateChatList]);\n\n  // C·∫≠p nh·∫≠t th·ªùi gian real-time\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // X·ª≠ l√Ω khi ch·ªçn m·ªôt friend\n  const handleSelectFriend = chat => {\n    setSelectedChatId(chat.id);\n    onSelectFriend(chat);\n    console.log('[ChatList] ƒê√£ ch·ªçn chat:', {\n      chatId: chat.id,\n      name: chat.name\n    });\n  };\n\n  // Logic x·ª≠ l√Ω d·ªØ li·ªáu chat\n  const chatData = userChats.map(chat => {\n    var _chat$last_message, _chat$last_message2, _chat$last_message3, _chat$last_message6;\n    const otherUserId = chat.members.find(member => member !== chatData1);\n    const userInfo = leakInfoMap[otherUserId] || {};\n    const timel = (_chat$last_message = chat.last_message) === null || _chat$last_message === void 0 ? void 0 : _chat$last_message.timestamp;\n    const dateToCheck = new Date(timel);\n    const now = currentTime;\n    const diffMs = now - dateToCheck;\n    let tx = '';\n    if (diffMs <= 0 || isNaN(diffMs)) tx = 'V√†i gi√¢y';else {\n      const diffSeconds = Math.floor(diffMs / 1000);\n      const diffMinutes = Math.floor(diffSeconds / 60);\n      const diffHours = Math.floor(diffMinutes / 60);\n      const diffDays = Math.floor(diffHours / 24);\n      if (diffDays > 7) {\n        const day = dateToCheck.getDate();\n        const month = dateToCheck.getMonth() + 1;\n        tx = `${day}/${month}`;\n      } else if (diffDays > 0) tx = `${diffDays} ng√†y`;else if (diffHours > 0) tx = `${diffHours} gi·ªù`;else if (diffMinutes > 0) tx = `${diffMinutes} ph√∫t`;else tx = 'V√†i gi√¢y';\n    }\n    let msg = '';\n    const messageType = (_chat$last_message2 = chat.last_message) === null || _chat$last_message2 === void 0 ? void 0 : _chat$last_message2.message_type;\n    const prefix = ((_chat$last_message3 = chat.last_message) === null || _chat$last_message3 === void 0 ? void 0 : _chat$last_message3.sender) !== chatData1 ? '' : 'B·∫°n: ';\n    if (messageType === 'text') {\n      var _chat$last_message4;\n      msg = prefix + (((_chat$last_message4 = chat.last_message) === null || _chat$last_message4 === void 0 ? void 0 : _chat$last_message4.content) || '');\n    } else if (messageType === 'image') {\n      msg = prefix + 'H√¨nh ·∫£nh';\n    } else if (messageType === 'video') {\n      msg = prefix + 'Video';\n    } else if (messageType === 'file') {\n      msg = prefix + 'T·ªáp';\n    } else {\n      var _chat$last_message5;\n      msg = prefix + (((_chat$last_message5 = chat.last_message) === null || _chat$last_message5 === void 0 ? void 0 : _chat$last_message5.content) || '');\n    }\n    return {\n      id: chat._id,\n      avatar: userInfo.avatar || '/default-avatar.png',\n      name: userInfo.fullname || 'ƒêang t·∫£i...',\n      message: msg,\n      time: tx,\n      unreadCount: 0,\n      member: chat.members[0] === chatData1 ? chat.members[1] : chat.members[0],\n      gender: userInfo.gender,\n      sender: chatData1,\n      messageType: messageType,\n      timestamp: (_chat$last_message6 = chat.last_message) === null || _chat$last_message6 === void 0 ? void 0 : _chat$last_message6.timestamp\n    };\n  }).sort((a, b) => {\n    const timeA = new Date(a.timestamp || 0).getTime();\n    const timeB = new Date(b.timestamp || 0).getTime();\n    return timeB - timeA;\n  });\n  const renderGroupMembers = chat => {\n    if (!chat.isGroup) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('group-info'),\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        className: cx('group-icon')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), chat.groupMembers && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('member-avatars'),\n        children: chat.groupMembers.slice(0, 2).map((member, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('member-avatar'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: member,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), chat.memberCount && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cx('member-count'),\n        children: chat.memberCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('chatList'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('chat-container'),\n      children: chatData.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('chat-item', {\n          'selected': chat.id === selectedChatId\n        }),\n        onClick: () => handleSelectFriend(chat),\n        role: \"button\",\n        tabIndex: 0,\n        onKeyDown: e => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            handleSelectFriend(chat);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('avatar-section'),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://ichigomazone.s3.amazonaws.com/${chat.avatar}`,\n            alt: chat.name,\n            className: cx('avatar')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), chat.isOfficial && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cx('official-badge'),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('content'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: cx('header'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: cx('title-section'),\n              children: [chat.isGroup && renderGroupMembers(chat), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: cx('name'),\n                children: chat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: cx('meta'),\n              children: [chat.isPinned && /*#__PURE__*/_jsxDEV(Pin, {\n                className: cx('pin-icon')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: cx('time'),\n                children: chat.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cx('message-section'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: cx('message-wrapper'),\n              children: [chat.messageType === 'image' && /*#__PURE__*/_jsxDEV(Image, {\n                className: cx('message-icon'),\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 52\n              }, this), chat.messageType === 'video' && /*#__PURE__*/_jsxDEV(Video, {\n                className: cx('message-icon'),\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 52\n              }, this), chat.messageType === 'file' && /*#__PURE__*/_jsxDEV(File, {\n                className: cx('message-icon'),\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: cx('message', 'custom-font'),\n                children: chat.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: cx('unread-badge'),\n              children: chat.unreadCount > 99 ? '99+' : chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatList, \"NJKq4tWh580xGUkmG5D+E8YsN3s=\");\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","classNames","styles","Pin","Users","File","Image","Video","axios","io","jsxDEV","_jsxDEV","cx","bind","ChatList","onSelectFriend","chatData1","setUpdateChatList","_s","userChats","setUserChats","leakInfoMap","setLeakInfoMap","selectedChatId","setSelectedChatId","currentTime","setCurrentTime","Date","socketRef","fetchChats","res","post","userId","status","data","chats","console","log","err","error","fetchAll","userIdsToFetch","map","chat","members","find","member","uniqueUserIds","Set","filter","length","promises","results","Promise","all","newLeakInfoMap","forEach","index","Object","keys","current","query","on","message","conversation_id","updateChatInList","content","sender","timestamp","message_type","url","warn","toISOString","disconnect","chatId","messageData","prevChats","chatExists","id","_id","updatedChats","last_message","decodeURIComponent","sortedChats","sort","a","b","_a$last_message","_b$last_message","timeA","getTime","timeB","interval","setInterval","clearInterval","handleSelectFriend","name","chatData","_chat$last_message","_chat$last_message2","_chat$last_message3","_chat$last_message6","otherUserId","userInfo","timel","dateToCheck","now","diffMs","tx","isNaN","diffSeconds","Math","floor","diffMinutes","diffHours","diffDays","day","getDate","month","getMonth","msg","messageType","prefix","_chat$last_message4","_chat$last_message5","avatar","fullname","time","unreadCount","gender","renderGroupMembers","isGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groupMembers","slice","src","alt","memberCount","onClick","role","tabIndex","onKeyDown","e","key","isOfficial","isPinned","size","_c","$RefreshReg$"],"sources":["/home/ichigomazone/Vscode/ReactJs/new-ui./frontend/src/components/List/chatList/index.js"],"sourcesContent":["\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './chatList.module.scss';\nimport { Pin, Users, File, Image, Video } from 'lucide-react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\n\nconst cx = classNames.bind(styles);\n\nfunction ChatList({ onSelectFriend, chatData1, setUpdateChatList }) {\n  const [userChats, setUserChats] = useState([]);\n  const [leakInfoMap, setLeakInfoMap] = useState({});\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const socketRef = useRef(null);\n\n  // L·∫•y danh s√°ch chat\n  useEffect(() => {\n    if (!chatData1) return;\n\n    const fetchChats = async () => {\n      try {\n        const res = await axios.post('http://localhost:5000/api/chat/chat-list', { userId: chatData1 });\n        if (res.status === 200) {\n          setUserChats(res.data.chats);\n          console.log('[ChatList] Danh s√°ch chat:', res.data);\n        }\n      } catch (err) {\n        console.error('[ChatList] L·ªói khi l·∫•y danh s√°ch chat:', err);\n      }\n    };\n\n    fetchChats();\n  }, [chatData1]);\n\n  // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const userIdsToFetch = userChats.map((chat) =>\n          chat.members.find((member) => member !== chatData1)\n        );\n\n        const uniqueUserIds = [...new Set(userIdsToFetch)].filter(userId => !(userId in leakInfoMap));\n\n        if (uniqueUserIds.length === 0) return;\n\n        const promises = uniqueUserIds.map((userId) =>\n          axios.post('http://localhost:5000/api/auth/leak-info1', { data: userId })\n        );\n\n        const results = await Promise.all(promises);\n\n        const newLeakInfoMap = { ...leakInfoMap };\n        results.forEach((res, index) => {\n          const userId = uniqueUserIds[index];\n          newLeakInfoMap[userId] = res.data;\n        });\n\n        setLeakInfoMap(newLeakInfoMap);\n        console.log('[ChatList] Th√¥ng tin ng∆∞·ªùi d√πng (map):', newLeakInfoMap);\n      } catch (err) {\n        console.log('[ChatList] L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:', err);\n      }\n    };\n\n    if (userChats.length > 0 && Object.keys(leakInfoMap).length < userChats.length) {\n      fetchAll();\n    }\n  }, [userChats, chatData1, leakInfoMap]);\n\n  // X·ª≠ l√Ω WebSocket ƒë·ªÉ l·∫Øng nghe tin nh·∫Øn\n  useEffect(() => {\n    if (!chatData1) return;\n\n    socketRef.current = io(\"http://localhost:5000\", {\n      query: { userId: chatData1 },\n    });\n\n    // L·∫Øng nghe tin nh·∫Øn t·ª´ ng∆∞·ªùi kh√°c (receiveMessage ho·∫∑c privateMessage)\n    socketRef.current.on(\"receiveMessage\", (data) => {\n      console.log(\"üì© Nh·∫≠n receiveMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null,\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu receiveMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    socketRef.current.on(\"privateMessage\", (data) => {\n      console.log(\"üì© Nh·∫≠n privateMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null,\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu privateMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    // L·∫Øng nghe tin nh·∫Øn do ch√≠nh m√¨nh g·ª≠i (selfMessage)\n    socketRef.current.on(\"selfMessage\", (data) => {\n      console.log(\"üì© Tin nh·∫Øn do t√¥i g·ª≠i trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content,\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n          url: data.message.url || null,\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu selfMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    // L·∫Øng nghe c·∫≠p nh·∫≠t tin nh·∫Øn media (updateMessage)\n    socketRef.current.on(\"updateMessage\", (data) => {\n      console.log(\"üì© Nh·∫≠n updateMessage trong ChatList:\", data);\n      if (data.message && data.message.conversation_id) {\n        updateChatInList(data.message.conversation_id, {\n          content: data.message.content || data.message.message_type,\n          sender: data.message.sender || chatData1,\n          timestamp: data.message.timestamp || new Date().toISOString(),\n          message_type: data.message.message_type,\n          url: data.message.url || null,\n        });\n      } else {\n        console.warn('[ChatList] D·ªØ li·ªáu updateMessage kh√¥ng h·ª£p l·ªá:', data);\n      }\n    });\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [chatData1]);\n\n  // H√†m c·∫≠p nh·∫≠t chat khi c√≥ tin nh·∫Øn m·ªõi\n  const updateChatInList = (chatId, messageData) => {\n    console.log('[ChatList] updateChatInList ƒë∆∞·ª£c g·ªçi v·ªõi:', { chatId, messageData });\n    setUserChats((prevChats) => {\n      const chatExists = prevChats.find((chat) => chat.id === chatId || chat._id === chatId);\n      if (!chatExists) {\n        console.warn('[ChatList] ChatId kh√¥ng t·ªìn t·∫°i:', chatId);\n        return prevChats;\n      }\n\n      const updatedChats = prevChats.map((chat) =>\n        chat.id === chatId || chat._id === chatId\n          ? {\n              ...chat,\n              last_message: {\n                content:\n                  messageData.message_type === 'text'\n                    ? messageData.content\n                    : messageData.url\n                    ? decodeURIComponent(messageData.content)\n                    : messageData.message_type,\n                sender: messageData.sender,\n                timestamp: messageData.timestamp,\n                message_type: messageData.message_type,\n                url: messageData.url,\n              },\n            }\n          : chat\n      );\n\n      // S·∫Øp x·∫øp theo timestamp c·ªßa last_message\n      const sortedChats = [...updatedChats].sort((a, b) => {\n        const timeA = new Date(a.last_message?.timestamp || 0).getTime();\n        const timeB = new Date(b.last_message?.timestamp || 0).getTime();\n        return timeB - timeA;\n      });\n\n      console.log('[ChatList] C·∫≠p nh·∫≠t userChats (sorted):', sortedChats);\n      return sortedChats;\n    });\n  };\n\n  // ƒêƒÉng k√Ω h√†m updateChatInList v·ªõi Dashboard\n  useEffect(() => {\n    if (setUpdateChatList && typeof setUpdateChatList === 'function') {\n      console.log('[ChatList] ƒêƒÉng k√Ω updateChatInList v·ªõi Dashboard');\n      setUpdateChatList(updateChatInList);\n    } else {\n      console.warn('[ChatList] setUpdateChatList kh√¥ng ph·∫£i l√† h√†m ho·∫∑c kh√¥ng ƒë∆∞·ª£c truy·ªÅn:', setUpdateChatList);\n    }\n  }, [setUpdateChatList]);\n\n  // C·∫≠p nh·∫≠t th·ªùi gian real-time\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // X·ª≠ l√Ω khi ch·ªçn m·ªôt friend\n  const handleSelectFriend = (chat) => {\n    setSelectedChatId(chat.id);\n    onSelectFriend(chat);\n    console.log('[ChatList] ƒê√£ ch·ªçn chat:', { chatId: chat.id, name: chat.name });\n  };\n\n  // Logic x·ª≠ l√Ω d·ªØ li·ªáu chat\n  const chatData = userChats.map((chat) => {\n    const otherUserId = chat.members.find((member) => member !== chatData1);\n    const userInfo = leakInfoMap[otherUserId] || {};\n\n    const timel = chat.last_message?.timestamp;\n    const dateToCheck = new Date(timel);\n    const now = currentTime;\n    const diffMs = now - dateToCheck;\n\n    let tx = '';\n    if (diffMs <= 0 || isNaN(diffMs)) tx = 'V√†i gi√¢y';\n    else {\n      const diffSeconds = Math.floor(diffMs / 1000);\n      const diffMinutes = Math.floor(diffSeconds / 60);\n      const diffHours = Math.floor(diffMinutes / 60);\n      const diffDays = Math.floor(diffHours / 24);\n\n      if (diffDays > 7) {\n        const day = dateToCheck.getDate();\n        const month = dateToCheck.getMonth() + 1;\n        tx = `${day}/${month}`;\n      } else if (diffDays > 0) tx = `${diffDays} ng√†y`;\n      else if (diffHours > 0) tx = `${diffHours} gi·ªù`;\n      else if (diffMinutes > 0) tx = `${diffMinutes} ph√∫t`;\n      else tx = 'V√†i gi√¢y';\n    }\n\n    let msg = '';\n    const messageType = chat.last_message?.message_type;\n    const prefix = chat.last_message?.sender !== chatData1 ? '' : 'B·∫°n: ';\n\n    if (messageType === 'text') {\n      msg = prefix + (chat.last_message?.content || '');\n    } else if (messageType === 'image') {\n      msg = prefix + 'H√¨nh ·∫£nh';\n    } else if (messageType === 'video') {\n      msg = prefix + 'Video';\n    } else if (messageType === 'file') {\n      msg = prefix + 'T·ªáp';\n    } else {\n      msg = prefix + (chat.last_message?.content || '');\n    }\n\n    return {\n      id: chat._id,\n      avatar: userInfo.avatar || '/default-avatar.png',\n      name: userInfo.fullname || 'ƒêang t·∫£i...',\n      message: msg,\n      time: tx,\n      unreadCount: 0,\n      member: chat.members[0] === chatData1 ? chat.members[1] : chat.members[0],\n      gender: userInfo.gender,\n      sender: chatData1,\n      messageType: messageType,\n      timestamp: chat.last_message?.timestamp,\n    };\n  }).sort((a, b) => {\n    const timeA = new Date(a.timestamp || 0).getTime();\n    const timeB = new Date(b.timestamp || 0).getTime();\n    return timeB - timeA;\n  });\n\n  const renderGroupMembers = (chat) => {\n    if (!chat.isGroup) return null;\n\n    return (\n      <div className={cx('group-info')}>\n        <Users className={cx('group-icon')} />\n        {chat.groupMembers && (\n          <div className={cx('member-avatars')}>\n            {chat.groupMembers.slice(0, 2).map((member, index) => (\n              <div key={index} className={cx('member-avatar')}>\n                <img src={member} alt=\"\" />\n              </div>\n            ))}\n          </div>\n        )}\n        {chat.memberCount && <span className={cx('member-count')}>{chat.memberCount}</span>}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cx('chatList')}>\n      <div className={cx('chat-container')}>\n        {chatData.map((chat) => (\n          <div\n            key={chat.id}\n            className={cx('chat-item', { 'selected': chat.id === selectedChatId })}\n            onClick={() => handleSelectFriend(chat)}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' || e.key === ' ') {\n                handleSelectFriend(chat);\n              }\n            }}\n          >\n            <div className={cx('avatar-section')}>\n              <img \n                src={`https://ichigomazone.s3.amazonaws.com/${chat.avatar}`} \n                alt={chat.name} \n                className={cx('avatar')} \n              />\n              {chat.isOfficial && (\n                <div className={cx('official-badge')}>\n                  <span>Z</span>\n                </div>\n              )}\n            </div>\n            <div className={cx('content')}>\n              <div className={cx('header')}>\n                <div className={cx('title-section')}>\n                  {chat.isGroup && renderGroupMembers(chat)}\n                  <h3 className={cx('name')}>{chat.name}</h3>\n                </div>\n                <div className={cx('meta')}>\n                  {chat.isPinned && <Pin className={cx('pin-icon')} />}\n                  <span className={cx('time')}>{chat.time}</span>\n                </div>\n              </div>\n              <div className={cx('message-section')}>\n                <div className={cx('message-wrapper')}>\n                  {chat.messageType === 'image' && <Image className={cx('message-icon')} size={16} />}\n                  {chat.messageType === 'video' && <Video className={cx('message-icon')} size={16} />}\n                  {chat.messageType === 'file' && <File className={cx('message-icon')} size={16} />}\n                  <p className={cx('message', 'custom-font')}>{chat.message}</p>\n                </div>\n                {chat.unreadCount > 0 && (\n                  <div className={cx('unread-badge')}>\n                    {chat.unreadCount > 99 ? '99+' : chat.unreadCount}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}