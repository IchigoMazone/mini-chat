{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";//import { publicRoutes } from '~/routes'\nimport\"./index.scss\";import{publicRoutes}from\"./routes\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Routes,{children:publicRoutes.map((route,index)=>{const Page=route.component;return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(Page,{})},index);})})})});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","publicRoutes","jsx","_jsx","App","children","className","map","route","index","Page","component","path","element"],"sources":["/home/ichigomazone/Vscode/ReactJs/new-ui/frontend/src/App.js"],"sourcesContent":["\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n//import { publicRoutes } from '~/routes'\nimport './index.scss';\nimport { publicRoutes } from \"./routes\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Routes>\n                    {publicRoutes.map((route, index) => {\n                        const Page = route.component;\n                        return <Route key={index} path={route.path} element={<Page />} />\n                    })}\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"AACA,OAASA,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE;AACA,qBACA,OAASC,YAAY,gBAAmB,OAAAC,GAAA,IAAAC,IAAA,yBAExC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,mBACID,IAAA,CAACL,MAAM,EAAAO,QAAA,cACHF,IAAA,QAAKG,SAAS,CAAC,KAAK,CAAAD,QAAA,cAChBF,IAAA,CAACJ,MAAM,EAAAM,QAAA,CACFJ,YAAY,CAACM,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,GAAK,CAChC,KAAM,CAAAC,IAAI,CAAGF,KAAK,CAACG,SAAS,CAC5B,mBAAOR,IAAA,CAACH,KAAK,EAAaY,IAAI,CAAEJ,KAAK,CAACI,IAAK,CAACC,OAAO,cAAEV,IAAA,CAACO,IAAI,GAAE,CAAE,EAA3CD,KAA6C,CAAC,CACrE,CAAC,CAAC,CACE,CAAC,CACR,CAAC,CACF,CAAC,CAEjB,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}