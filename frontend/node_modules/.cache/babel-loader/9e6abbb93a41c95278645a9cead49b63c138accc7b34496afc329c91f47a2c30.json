{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import{useLocation}from\"react-router-dom\";import classNames from\"classnames/bind\";import styles from\"./Dashboard.module.scss\";import Sidebar from\"../../components/Sidebar\";import List from\"../../components/List\";import List2 from\"../../components/List2\";import Content2 from\"../../components/Content2\";import Content3 from\"../../components/Content3\";import Content4 from\"../../components/Content4\";import Content5 from\"../../components/Content5\";import Chat from\"../../components/Chat\";import Detail from\"../../components/Detail\";import ProFile from\"../ProFile\";import Logout from\"../Logout\";import axios from\"axios\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const cx=classNames.bind(styles);function DashBoard(){var _location$state;const[mainIndex,setMainIndex]=useState(1);// 1 = List, 2 = List2\nconst[overlayIndex,setOverlayIndex]=useState(null);// 0,3,4 = overlay\nconst[showDetail,setShowDetail]=useState(false);const[selectedItem,setSelectedItem]=useState(1);const[selectedFriend,setSelectedFriend]=useState(null);const location=useLocation();const username=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username;const[userId,setUserId]=useState(\"\");const updateChatListRef=useRef(null);// Ref để lưu hàm updateChatInList từ ChatList\nconsole.log(\"[Dashboard] Dữ liệu từ Dashboard: \",selectedFriend);console.log(\"Dashboard \".concat(username));// Fetch userId từ username\nuseEffect(()=>{if(!username)return;const fetchUserId=async()=>{try{const res=await axios.post(\"http://localhost:5000/api/auth/leak-id\",{username});if(res.status===200){setUserId(res.data.userId);console.log('[Dashboard] User ID:',res.data.userId);}}catch(error){console.error('[Dashboard] Error fetching user ID:',error);}};fetchUserId();},[username]);// Callback để xử lý cập nhật tin nhắn\nconst handleUpdateChat=(chatId,message)=>{console.log(\"[Dashboard] Nh\\u1EADn d\\u1EEF li\\u1EC7u t\\u1EEB Chat: Chat \".concat(chatId,\" \\u0111\\u01B0\\u1EE3c c\\u1EADp nh\\u1EADt v\\u1EDBi tin nh\\u1EAFn:\"),message);if(typeof updateChatListRef.current==='function'){console.log('[Dashboard] Gọi updateChatInList để truyền dữ liệu đến ChatList');updateChatListRef.current(chatId,message);// Gọi hàm updateChatInList từ ChatList\n}else{console.warn('[Dashboard] updateChatListRef.current không phải là hàm hoặc chưa được gán:',updateChatListRef.current);}};// Hàm để lưu hàm updateChatInList từ ChatList\nconst setUpdateChatList=updateFn=>{//console.log('[Dashboard] Đã lưu hàm updateChatInList từ ChatList:', updateFn);\nupdateChatListRef.current=updateFn;};const handleToggleDetail=()=>setShowDetail(prev=>!prev);const handleSidebarClick=index=>{if(index===1||index===2){setMainIndex(index);setOverlayIndex(null);}else if(index===0||index===4){setOverlayIndex(prev=>prev===index?null:index);}};const currentSidebarIndex=overlayIndex!==null&&overlayIndex!==void 0?overlayIndex:mainIndex;const handleSelectFriend=friend=>{setSelectedFriend(friend);console.log(\"[Dashboard] Selected friend:\",friend);};useEffect(()=>{if(mainIndex===2&&!selectedFriend){setSelectedItem(1);}},[mainIndex,selectedFriend]);return/*#__PURE__*/_jsxs(\"div\",{className:cx(\"container\"),children:[/*#__PURE__*/_jsx(Sidebar,{activeIndex:currentSidebarIndex,setActiveIndex:handleSidebarClick,datax:userId}),/*#__PURE__*/_jsxs(\"div\",{className:cx(\"content\"),children:[mainIndex===1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(List,{onSelectFriend:handleSelectFriend,selectedFriend:selectedFriend,datax:userId,onUpdateChat:handleUpdateChat,setUpdateChatList:setUpdateChatList// Truyền hàm để lưu updateChatInList\n}),/*#__PURE__*/_jsx(Chat,{friend:selectedFriend,onToggleDetail:handleToggleDetail,onUpdateChat:handleUpdateChat}),showDetail&&/*#__PURE__*/_jsx(Detail,{friend:selectedFriend})]}),mainIndex===2&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(List2,{selectedItem:selectedItem,onSelect:item=>{setSelectedItem(item);setSelectedFriend(null);},onSelectFriend:handleSelectFriend}),/*#__PURE__*/_jsx(\"div\",{className:cx(\"content1\"),children:selectedFriend?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Chat,{friend:selectedFriend,onToggleDetail:handleToggleDetail,onUpdateChat:handleUpdateChat}),showDetail&&/*#__PURE__*/_jsx(Detail,{})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedItem===1&&/*#__PURE__*/_jsx(Content3,{onSelectFriend:handleSelectFriend}),selectedItem===2&&/*#__PURE__*/_jsx(Content5,{}),selectedItem===3&&/*#__PURE__*/_jsx(Content2,{onSelectFriend:handleSelectFriend}),selectedItem===4&&/*#__PURE__*/_jsx(Content4,{})]})})]})]}),overlayIndex===0&&/*#__PURE__*/_jsx(ProFile,{onClose:()=>setOverlayIndex(null),datax:userId}),overlayIndex===4&&/*#__PURE__*/_jsx(Logout,{onClose:()=>setOverlayIndex(null),onLogout:()=>setOverlayIndex(null)})]});}export default DashBoard;","map":{"version":3,"names":["useState","useEffect","useRef","useLocation","classNames","styles","Sidebar","List","List2","Content2","Content3","Content4","Content5","Chat","Detail","ProFile","Logout","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","cx","bind","DashBoard","_location$state","mainIndex","setMainIndex","overlayIndex","setOverlayIndex","showDetail","setShowDetail","selectedItem","setSelectedItem","selectedFriend","setSelectedFriend","location","username","state","userId","setUserId","updateChatListRef","console","log","concat","fetchUserId","res","post","status","data","error","handleUpdateChat","chatId","message","current","warn","setUpdateChatList","updateFn","handleToggleDetail","prev","handleSidebarClick","index","currentSidebarIndex","handleSelectFriend","friend","className","children","activeIndex","setActiveIndex","datax","onSelectFriend","onUpdateChat","onToggleDetail","onSelect","item","onClose","onLogout"],"sources":["/home/ichigomazone/Vscode/ReactJs/new-ui/frontend/src/pages/DashBoard/index.js"],"sourcesContent":["\nimport { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Dashboard.module.scss\";\nimport Sidebar from \"~/components/Sidebar\";\nimport List from \"~/components/List\";\nimport List2 from \"~/components/List2\";\nimport Content2 from \"~/components/Content2\";\nimport Content3 from \"~/components/Content3\";\nimport Content4 from \"~/components/Content4\";\nimport Content5 from \"~/components/Content5\";\nimport Chat from \"~/components/Chat\";\nimport Detail from \"~/components/Detail\";\nimport ProFile from \"../ProFile\";\nimport Logout from \"../Logout\";\nimport axios from \"axios\";\n\nconst cx = classNames.bind(styles);\n\nfunction DashBoard() {\n  const [mainIndex, setMainIndex] = useState(1); // 1 = List, 2 = List2\n  const [overlayIndex, setOverlayIndex] = useState(null); // 0,3,4 = overlay\n  const [showDetail, setShowDetail] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(1);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const location = useLocation();\n  const username = location.state?.username;\n  const [userId, setUserId] = useState(\"\");\n  const updateChatListRef = useRef(null); // Ref để lưu hàm updateChatInList từ ChatList\n\n  console.log(\"[Dashboard] Dữ liệu từ Dashboard: \", selectedFriend);\n  console.log (`Dashboard ${username}`);\n\n  // Fetch userId từ username\n  useEffect(() => {\n    if (!username) return;\n\n    const fetchUserId = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:5000/api/auth/leak-id\", {\n          username,\n        });\n        if (res.status === 200) {\n          setUserId(res.data.userId);\n          console.log('[Dashboard] User ID:', res.data.userId);\n        }\n      } catch (error) {\n        console.error('[Dashboard] Error fetching user ID:', error);\n      }\n    };\n\n    fetchUserId();\n  }, [username]);\n\n  // Callback để xử lý cập nhật tin nhắn\n  const handleUpdateChat = (chatId, message) => {\n    console.log(`[Dashboard] Nhận dữ liệu từ Chat: Chat ${chatId} được cập nhật với tin nhắn:`, message);\n    if (typeof updateChatListRef.current === 'function') {\n      console.log('[Dashboard] Gọi updateChatInList để truyền dữ liệu đến ChatList');\n      updateChatListRef.current(chatId, message); // Gọi hàm updateChatInList từ ChatList\n    } else {\n      console.warn('[Dashboard] updateChatListRef.current không phải là hàm hoặc chưa được gán:', updateChatListRef.current);\n    }\n  };\n\n  // Hàm để lưu hàm updateChatInList từ ChatList\n  const setUpdateChatList = (updateFn) => {\n    //console.log('[Dashboard] Đã lưu hàm updateChatInList từ ChatList:', updateFn);\n    updateChatListRef.current = updateFn;\n  };\n\n  const handleToggleDetail = () => setShowDetail((prev) => !prev);\n\n  const handleSidebarClick = (index) => {\n    if (index === 1 || index === 2) {\n      setMainIndex(index);\n      setOverlayIndex(null);\n    } else if (index === 0 || index === 4) {\n      setOverlayIndex((prev) => (prev === index ? null : index));\n    }\n  };\n\n  const currentSidebarIndex = overlayIndex ?? mainIndex;\n\n  const handleSelectFriend = (friend) => {\n    setSelectedFriend(friend);\n    console.log(\"[Dashboard] Selected friend:\", friend);\n  };\n\n  useEffect(() => {\n    if (mainIndex === 2 && !selectedFriend) {\n      setSelectedItem(1);\n    }\n  }, [mainIndex, selectedFriend]);\n\n  return (\n    <div className={cx(\"container\")}>\n      {/* Sidebar */}\n      <Sidebar \n        activeIndex={currentSidebarIndex}\n        setActiveIndex={handleSidebarClick}\n        datax={userId} \n      />\n\n      {/* Main Content */}\n      <div className={cx(\"content\")}>\n        {mainIndex === 1 && (\n          <>\n            <List \n              onSelectFriend={handleSelectFriend}\n              selectedFriend={selectedFriend} \n              datax={userId}\n              onUpdateChat={handleUpdateChat}\n              setUpdateChatList={setUpdateChatList} // Truyền hàm để lưu updateChatInList\n            />\n            <Chat \n              friend={selectedFriend}\n              onToggleDetail={handleToggleDetail}\n              onUpdateChat={handleUpdateChat}\n            />\n            {showDetail && \n              <Detail \n                friend={selectedFriend}\n              />}\n          </>\n        )}\n\n        {mainIndex === 2 && (\n          <>\n            <List2\n              selectedItem={selectedItem}\n              onSelect={(item) => {\n                setSelectedItem(item);\n                setSelectedFriend(null);\n              }}\n              onSelectFriend={handleSelectFriend}\n            />\n            <div className={cx(\"content1\")}>\n              {selectedFriend ? (\n                <>\n                  <Chat \n                    friend={selectedFriend} \n                    onToggleDetail={handleToggleDetail} \n                    onUpdateChat={handleUpdateChat}\n                  />\n                  {showDetail && <Detail />}\n                </>\n              ) : (\n                <>\n                  {selectedItem === 1 && <Content3 onSelectFriend={handleSelectFriend} />}\n                  {selectedItem === 2 && <Content5 />}\n                  {selectedItem === 3 && <Content2 onSelectFriend={handleSelectFriend} />}\n                  {selectedItem === 4 && <Content4 />}\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Overlays */}\n      {overlayIndex === 0 && \n        <ProFile \n          onClose={() => setOverlayIndex(null)} \n          datax={userId}\n        />}\n      {/* {overlayIndex === 3 && <ProfileOverlay />} */}\n      {overlayIndex === 4 && (\n        <Logout\n          onClose={() => setOverlayIndex(null)}\n          onLogout={() => setOverlayIndex(null)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DashBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}