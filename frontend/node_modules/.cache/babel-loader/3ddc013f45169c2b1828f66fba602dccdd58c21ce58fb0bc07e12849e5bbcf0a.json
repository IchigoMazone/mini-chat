{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useSocketHandler.js\nimport { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nfunction useSocketHandler(friend, onUpdateChat, setMessages) {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    if (!(friend !== null && friend !== void 0 && friend.sender)) return;\n    socketRef.current = io(\"http://localhost:5000\", {\n      query: {\n        userId: friend.sender\n      }\n    });\n    socketRef.current.on(\"receiveMessage\", data => {\n      console.log(\"Nhận tin nhắn qua Socket.IO:\", data);\n      const receivedMessage = {\n        id: data.message.id || Date.now() + Math.random(),\n        text: data.message.message_type === \"text\" && typeof data.message.content === \"string\" ? data.message.content : \"\",\n        type: data.message.sender === friend.sender ? \"sent\" : \"received\",\n        timestamp: new Date(data.message.timestamp),\n        temporaryImage: data.message.message_type === \"image\" && data.message.base64Data ? data.message.base64Data : null,\n        image: data.message.message_type === \"image\" && data.message.url ? data.message.url : null,\n        temporaryVideo: data.message.message_type === \"video\" && data.message.base64Data ? data.message.base64Data : null,\n        video: data.message.message_type === \"video\" && data.message.url ? data.message.url : null,\n        file: data.message.message_type === \"file\" ? {\n          name: data.message.content,\n          url: data.message.url ? data.message.url : null\n        } : null,\n        isTemporary: data.message.message_type === \"file\" ? false : !!data.message.base64Data\n      };\n      if (data.message.conversation_id === friend.id) {\n        setMessages(prev => {\n          const existingMessageIndex = prev.findIndex(msg => msg.id === receivedMessage.id);\n          if (existingMessageIndex !== -1) {\n            const updatedMessages = [...prev];\n            updatedMessages[existingMessageIndex] = {\n              ...updatedMessages[existingMessageIndex],\n              temporaryImage: receivedMessage.temporaryImage || updatedMessages[existingMessageIndex].temporaryImage,\n              image: receivedMessage.image || updatedMessages[existingMessageIndex].image,\n              temporaryVideo: receivedMessage.temporaryVideo || updatedMessages[existingMessageIndex].temporaryVideo,\n              video: receivedMessage.video || updatedMessages[existingMessageIndex].video,\n              file: receivedMessage.file || updatedMessages[existingMessageIndex].file,\n              isTemporary: data.message.message_type === \"file\" ? false : false\n            };\n            return updatedMessages;\n          }\n          if (!prev.length || receivedMessage.timestamp > prev[prev.length - 1].timestamp) {\n            return [...prev, receivedMessage];\n          }\n          return prev;\n        });\n      }\n      if (onUpdateChat) {\n        var _receivedMessage$file, _receivedMessage$file2;\n        console.log(\"Gọi onUpdateChat từ receiveMessage (global):\", data.message.conversation_id, {\n          content: receivedMessage.text || ((_receivedMessage$file = receivedMessage.file) === null || _receivedMessage$file === void 0 ? void 0 : _receivedMessage$file.name) || \"Media\",\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type\n        });\n        onUpdateChat(data.message.conversation_id, {\n          content: receivedMessage.text || ((_receivedMessage$file2 = receivedMessage.file) === null || _receivedMessage$file2 === void 0 ? void 0 : _receivedMessage$file2.name) || \"Media\",\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type\n        });\n      }\n    });\n    socketRef.current.on(\"updateMessage\", data => {\n      console.log(\"Cập nhật tin nhắn qua Socket.IO:\", data);\n      if (data.message.conversation_id === friend.id) {\n        setMessages(prev => prev.map(msg => {\n          if (msg.id === data.message.id) {\n            var _msg$file;\n            return {\n              ...msg,\n              image: data.message.url && data.message.message_type === \"image\" ? `http://localhost:5000${data.message.url}` : msg.image,\n              video: data.message.url && data.message.message_type === \"video\" ? `http://localhost:5000${data.message.url}` : msg.video,\n              file: data.message.url && data.message.message_type === \"file\" ? {\n                name: ((_msg$file = msg.file) === null || _msg$file === void 0 ? void 0 : _msg$file.name) || data.message.content,\n                url: data.message.url\n              } : msg.file,\n              isTemporary: false,\n              uploading: false\n            };\n          }\n          return msg;\n        }));\n        if (onUpdateChat) {\n          console.log(\"Gọi onUpdateChat từ updateMessage:\", friend.id, {\n            content: data.message.content || \"Media\",\n            sender: friend.sender,\n            timestamp: new Date().toISOString(),\n            message_type: data.message.message_type\n          });\n          onUpdateChat(friend.id, {\n            content: data.message.content || \"Media\",\n            sender: friend.sender,\n            timestamp: new Date().toISOString(),\n            message_type: data.message.message_type\n          });\n        }\n      }\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        console.log(\"Ngắt kết nối Socket.IO trong Chat\");\n      }\n    };\n  }, [friend, onUpdateChat, setMessages]);\n  useEffect(() => {\n    if (socketRef.current && friend !== null && friend !== void 0 && friend.id) {\n      socketRef.current.emit(\"joinChat\", friend.id);\n      console.log(\"Join chat room:\", friend.id);\n      socketRef.current.emit(\"receiveMessage\");\n      return () => {\n        if (socketRef.current && friend !== null && friend !== void 0 && friend.id) {\n          socketRef.current.emit(\"leaveChat\", friend.id);\n          console.log(\"Leave chat room:\", friend.id);\n        }\n      };\n    }\n  }, [friend === null || friend === void 0 ? void 0 : friend.id]);\n  return {\n    socketRef\n  };\n}\n_s(useSocketHandler, \"sOoGPfr2IEyc8S7bWkmAqPt/gWk=\");\nexport default useSocketHandler;","map":{"version":3,"names":["useEffect","useRef","io","useSocketHandler","friend","onUpdateChat","setMessages","_s","socketRef","sender","current","query","userId","on","data","console","log","receivedMessage","id","message","Date","now","Math","random","text","message_type","content","type","timestamp","temporaryImage","base64Data","image","url","temporaryVideo","video","file","name","isTemporary","conversation_id","prev","existingMessageIndex","findIndex","msg","updatedMessages","length","_receivedMessage$file","_receivedMessage$file2","map","_msg$file","uploading","toISOString","disconnect","emit"],"sources":["/home/ichigomazone/Vscode/ReactJs/new-ui/frontend/src/components/Chat/SocketHandler/useSocketHander.js"],"sourcesContent":["// hooks/useSocketHandler.js\nimport { useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\n\nfunction useSocketHandler(friend, onUpdateChat, setMessages) {\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    if (!friend?.sender) return;\n\n    socketRef.current = io(\"http://localhost:5000\", {\n      query: { userId: friend.sender },\n    });\n\n    socketRef.current.on(\"receiveMessage\", (data) => {\n      console.log(\"Nhận tin nhắn qua Socket.IO:\", data);\n      \n      const receivedMessage = {\n        id: data.message.id || Date.now() + Math.random(),\n        text: data.message.message_type === \"text\" && typeof data.message.content === \"string\" ? data.message.content : \"\",\n        type: data.message.sender === friend.sender ? \"sent\" : \"received\",\n        timestamp: new Date(data.message.timestamp),\n        temporaryImage: data.message.message_type === \"image\" && data.message.base64Data ? data.message.base64Data : null,\n        image: data.message.message_type === \"image\" && data.message.url ? data.message.url : null,\n        temporaryVideo: data.message.message_type === \"video\" && data.message.base64Data ? data.message.base64Data : null,\n        video: data.message.message_type === \"video\" && data.message.url ? data.message.url : null,\n        file: data.message.message_type === \"file\" ? {\n          name: data.message.content,\n          url: data.message.url ? data.message.url : null,\n        } : null,\n        isTemporary: data.message.message_type === \"file\" ? false : !!data.message.base64Data,\n      };\n\n      if (data.message.conversation_id === friend.id) {\n        setMessages((prev) => {\n          const existingMessageIndex = prev.findIndex((msg) => msg.id === receivedMessage.id);\n          if (existingMessageIndex !== -1) {\n            const updatedMessages = [...prev];\n            updatedMessages[existingMessageIndex] = {\n              ...updatedMessages[existingMessageIndex],\n              temporaryImage: receivedMessage.temporaryImage || updatedMessages[existingMessageIndex].temporaryImage,\n              image: receivedMessage.image || updatedMessages[existingMessageIndex].image,\n              temporaryVideo: receivedMessage.temporaryVideo || updatedMessages[existingMessageIndex].temporaryVideo,\n              video: receivedMessage.video || updatedMessages[existingMessageIndex].video,\n              file: receivedMessage.file || updatedMessages[existingMessageIndex].file,\n              isTemporary: data.message.message_type === \"file\" ? false : false,\n            };\n            return updatedMessages;\n          }\n          if (!prev.length || receivedMessage.timestamp > prev[prev.length - 1].timestamp) {\n            return [...prev, receivedMessage];\n          }\n          return prev;\n        });\n      }\n\n      if (onUpdateChat) {\n        console.log(\"Gọi onUpdateChat từ receiveMessage (global):\", data.message.conversation_id, {\n          content: receivedMessage.text || receivedMessage.file?.name || \"Media\",\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n        });\n        onUpdateChat(data.message.conversation_id, {\n          content: receivedMessage.text || receivedMessage.file?.name || \"Media\",\n          sender: data.message.sender,\n          timestamp: data.message.timestamp,\n          message_type: data.message.message_type,\n        });\n      }\n    });\n\n    socketRef.current.on(\"updateMessage\", (data) => {\n      console.log(\"Cập nhật tin nhắn qua Socket.IO:\", data);\n      \n      if (data.message.conversation_id === friend.id) {\n        setMessages((prev) =>\n          prev.map((msg) => {\n            if (msg.id === data.message.id) {\n              return {\n                ...msg,\n                image: data.message.url && data.message.message_type === \"image\" ? `http://localhost:5000${data.message.url}` : msg.image,\n                video: data.message.url && data.message.message_type === \"video\" ? `http://localhost:5000${data.message.url}` : msg.video,\n                file: data.message.url && data.message.message_type === \"file\" ? {\n                  name: msg.file?.name || data.message.content,\n                  url: data.message.url,\n                } : msg.file,\n                isTemporary: false,\n                uploading: false,\n              };\n            }\n            return msg;\n          })\n        );\n        \n        if (onUpdateChat) {\n          console.log(\"Gọi onUpdateChat từ updateMessage:\", friend.id, {\n            content: data.message.content || \"Media\",\n            sender: friend.sender,\n            timestamp: new Date().toISOString(),\n            message_type: data.message.message_type,\n          });\n          onUpdateChat(friend.id, {\n            content: data.message.content || \"Media\",\n            sender: friend.sender,\n            timestamp: new Date().toISOString(),\n            message_type: data.message.message_type,\n          });\n        }\n      }\n    });\n\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        console.log(\"Ngắt kết nối Socket.IO trong Chat\");\n      }\n    };\n  }, [friend, onUpdateChat, setMessages]);\n\n  useEffect(() => {\n    if (socketRef.current && friend?.id) {\n      socketRef.current.emit(\"joinChat\", friend.id);\n      console.log(\"Join chat room:\", friend.id);\n      \n      socketRef.current.emit(\"receiveMessage\")\n\n      return () => {\n        if (socketRef.current && friend?.id) {\n          socketRef.current.emit(\"leaveChat\", friend.id);\n          console.log(\"Leave chat room:\", friend.id);\n        }\n      };\n    }\n  }, [friend?.id]);\n\n  return { socketRef };\n}\n\nexport default useSocketHandler;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}